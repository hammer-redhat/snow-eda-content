---
- name: Default Implement-Phase Change Request Processor
  hosts: localhost
  gather_facts: false
  vars:
    change_request_number: "{{ ansible_eda.event.change_request_number | default(ansible_eda.event.number) }}"
    change_request_sys_id: "{{ ansible_eda.event.change_request_sys_id | default(ansible_eda.event.sys_id) }}"
    change_request_state: "{{ ansible_eda.event.change_request_state | default(ansible_eda.event.state) }}"
    short_description: "{{ ansible_eda.event.short_description }}"
    description: "{{ ansible_eda.event.description | default('') }}"
    priority: "{{ ansible_eda.event.priority | default('') }}"
    urgency: "{{ ansible_eda.event.urgency | default('') }}"
    impact: "{{ ansible_eda.event.impact | default('') }}"
    assignment_group: "{{ ansible_eda.event.assignment_group | default('') }}"
    assigned_to: "{{ ansible_eda.event.assigned_to | default('') }}"
    start_date: "{{ ansible_eda.event.start_date | default('') }}"
    planned_end_date: "{{ ansible_eda.event.planned_end_date | default('') }}"
    change_type: "{{ ansible_eda.event.change_type | default(ansible_eda.event.type | default('')) }}"
    risk_level: "{{ ansible_eda.event.risk_level | default(ansible_eda.event.risk | default('')) }}"

  tasks:
    - name: Log change request context
      ansible.builtin.debug:
        msg: |
          Implement-phase change request received (default handler):
          - Number: {{ change_request_number }}
          - Sys ID: {{ change_request_sys_id }}
          - State: {{ change_request_state }}
          - Short Description: {{ short_description }}
          - Priority/Urgency/Impact: {{ priority }}/{{ urgency }}/{{ impact }}
          - Assignment: {{ assignment_group }} / {{ assigned_to }}
          - Start/Planned End: {{ start_date }} / {{ planned_end_date }}
          - Type/Risk: {{ change_type }} / {{ risk_level }}

    - name: Get change request details
      servicenow.itsm.change_request_info:
        sys_id: "{{ change_request_sys_id }}"
      register: cr_details

    - name: Extract incident identifiers from change request description
      ansible.builtin.set_fact:
        parsed_inc_number: "{{ (cr_details.record.description | default('')) | regex_search('Incident Number:\\s*(INC[0-9]+)', '\\1') | default('') }}"
        parsed_inc_sys_id: "{{ (cr_details.record.description | default('')) | regex_search('Incident Sys ID:\\s*([0-9a-f]{32})', '\\1') | default('') }}"

    - name: Determine incident identifiers (fallback to short_description pattern)
      ansible.builtin.set_fact:
        incident_number: "{{ parsed_inc_number | default((short_description | default('')) | regex_search('(INC[0-9]+)', '\\1'), true) }}"
        incident_sys_id: "{{ parsed_inc_sys_id | default('', true) }}"

    - name: Normalize incident number to plain string
      ansible.builtin.set_fact:
        incident_number: "{{ (incident_number | string) | regex_search('INC[0-9]+') | default('', true) }}"

    - name: Resolve incident sys_id from number when missing
      servicenow.itsm.incident_info:
        sysparm_query: "number={{ incident_number }}"
      when: (incident_sys_id | length == 0) and (incident_number | length > 0)
      register: incident_lookup

    - name: Set incident sys_id from lookup when available
      ansible.builtin.set_fact:
        incident_sys_id: "{{ (incident_lookup.records[0].sys_id | default('')) if (incident_lookup is defined and (incident_lookup.records | default([])) | length > 0) else incident_sys_id }}"
      when: incident_lookup is defined

