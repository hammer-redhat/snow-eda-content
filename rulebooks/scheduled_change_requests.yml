---
- name: Monitor ServiceNow Change Requests for Test Patch Deployment Implementation
  hosts: all
  sources:
    - name: Monitor ServiceNow change requests for test patch deployment implementation
      servicenow.itsm.records:
        table: change_request
        interval: 10
        fields:
          - sys_id
          - number
          - short_description
          - description
          - state
          - priority
          - urgency
          - impact
          - category
          - subcategory
          - assignment_group
          - assigned_to
          - sys_created_on
          - sys_updated_on
          - sys_mod_count
          - sys_class_name
          - work_notes
          - comments
          - start_date
          - planned_end_date
          - start_date
          - end_date
          - risk
          - type
          - reason
          - justification
          - implementation_plan
          - rollback_plan
          - test_plan
          - communication_plan
          - approval_set
          - change_plan
          - risk_assessment
          - business_justification
          - technical_justification
          - implementation_notes
          - close_code
          - close_notes
          - resolution_notes

  rules:
    # Monitor for change requests in implementation state with test patch deployment description
    - name: Process test patch deployment change requests in implementation
      condition: event.sys_class_name == "change_request" and event.state == "implementation" and event.short_description == "test patch deployment"
      action:
        run_job_template:
          name: "Process Test Patch Deployment Change Request"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description }}"
              start_date: "{{ event.start_date }}"
              planned_end_date: "{{ event.planned_end_date }}"
              assignment_group: "{{ event.assignment_group }}"
              assigned_to: "{{ event.assigned_to }}"
              priority: "{{ event.priority }}"
              urgency: "{{ event.urgency }}"
              impact: "{{ event.impact }}"
              change_type: "{{ event.type }}"
              risk_level: "{{ event.risk }}"
              work_notes: "{{ event.work_notes }}"
              implementation_notes: "{{ event.implementation_notes }}"

    # Monitor for test patch deployment change requests that have been updated during implementation
    - name: Track test patch deployment implementation progress
      condition: event.sys_class_name == "change_request" and event.state == "implementation" and event.short_description == "test patch deployment" and event.sys_mod_count > "0"
      action:
        run_job_template:
          name: "Track Test Patch Deployment Progress"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description }}"
              start_date: "{{ event.start_date }}"
              planned_end_date: "{{ event.planned_end_date }}"
              assignment_group: "{{ event.assignment_group }}"
              assigned_to: "{{ event.assigned_to }}"
              work_notes: "{{ event.work_notes }}"
              implementation_notes: "{{ event.implementation_notes }}"
              priority: "{{ event.priority }}"
              urgency: "{{ event.urgency }}"
              impact: "{{ event.impact }}"

    # Monitor for high-priority test patch deployment change requests in implementation
    - name: Escalate high-priority test patch deployment change requests
      condition: event.sys_class_name == "change_request" and event.state == "implementation" and event.short_description == "test patch deployment" and (event.priority == "1" or event.priority == "2")
      action:
        run_job_template:
          name: "Process Test Patch Deployment Change Request"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description }}"
              priority: "{{ event.priority }}"
              urgency: "{{ event.urgency }}"
              impact: "{{ event.impact }}"
              start_date: "{{ event.start_date }}"
              planned_end_date: "{{ event.planned_end_date }}"
              assignment_group: "{{ event.assignment_group }}"
              assigned_to: "{{ event.assigned_to }}"
              change_type: "{{ event.type }}"
              risk_level: "{{ event.risk }}"
              work_notes: "{{ event.work_notes }}"
              implementation_notes: "{{ event.implementation_notes }}"

    # Monitor for test patch deployment change requests approaching their planned end date
    - name: Alert for test patch deployment change requests approaching end date
      condition: event.sys_class_name == "change_request" and event.state == "implementation" and event.short_description == "test patch deployment" and event.planned_end_date is defined
      action:
        run_job_template:
          name: "Alert Test Patch Deployment Ending Soon"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description }}"
              start_date: "{{ event.start_date }}"
              planned_end_date: "{{ event.planned_end_date }}"
              assignment_group: "{{ event.assignment_group }}"
              assigned_to: "{{ event.assigned_to }}"
              priority: "{{ event.priority }}"
              urgency: "{{ event.urgency }}"
              impact: "{{ event.impact }}"
              alert_type: "end_date_approaching"
