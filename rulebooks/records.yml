---
- name: Generic new poll for new records in ServiceNow and process the incidents.
  hosts: all
  sources:
    - name: Watch for any updated incidents
      servicenow.itsm.records:
        table: incident
        interval: 5

    - name: Monitor ServiceNow change requests in implementation
      servicenow.itsm.records:
        table: change_request
        interval: 10
        sysparm_query: "state=-1"
        fields:
          - sys_id
          - number
          - state
          - short_description
          - description
          - start_date
          - planned_end_date
          - assignment_group
          - assigned_to
          - priority
          - urgency
          - impact
          - type
          - risk
          - comments_and_work_notes

    - name: Monitor new change requests to transition to implementation
      servicenow.itsm.records:
        table: change_request
        interval: 10
        sysparm_query: "state=-5^short_descriptionLIKERelated to Incident"
        fields:
          - sys_id
          - number
          - state
          - short_description
          - description
          - start_date
          - planned_end_date
          - assignment_group
          - assigned_to
          - priority
          - urgency
          - impact
          - type
          - risk
          - comments_and_work_notes

  rules:
    - name: Transition new change requests to implementation
      condition: event.sys_class_name == "change_request" and (event.state in ["-5", -5, "new", "New"]) and ("Related to Incident" in event.short_description)
        and ("EDA-IMPLEMENT-PROCESSED" not in event.comments_and_work_notes)
      action:
        run_job_template:
          name: "SNOW: Implement - Default"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description | default('') }}"
              description: "{{ event.description | default('') }}"
              start_date: "{{ event.start_date | default('') }}"
              planned_end_date: "{{ event.planned_end_date | default(event.end_date | default('')) }}"
              assignment_group: "{{ event.assignment_group | default('') }}"
              assigned_to: "{{ event.assigned_to | default('') }}"
              priority: "{{ event.priority | default('') }}"
              urgency: "{{ event.urgency | default('') }}"
              impact: "{{ event.impact | default('') }}"
              change_type: "{{ event.type | default('') }}"
              risk_level: "{{ event.risk | default('') }}"

    - name: Enrich new incident received.
      condition: event.sys_class_name == "incident" and event.sys_mod_count == "0"
      action:
        run_job_template:
          name: "SNOW: EDA Enrich ServiceNow REQ"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              req_sys_id: "{{ event.sys_id }}"
              req_number: "{{ event.number }}"
              short_description: "{{ event.short_description | default('') }}"

    - name: Create a change request if needed.
      condition: event.sys_class_name == "incident" and event.state not in ["6", "7"] and event.sys_mod_count >= "0" and (event.category == "Software" or event.category == "software") and
        event.short_description == "test service failure"
      action:
        run_job_template:
          name: "SNOW: Create Software Change Request"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              req_sys_id: "{{ event.sys_id }}"
              req_number: "{{ event.number }}"

    - name: Dispatch patch-related incidents in progress.
      condition: event.sys_class_name == "incident" and event.state not in ["6", "7"] and ("EDA-IMPLEMENT-PROCESSED" not in event.comments_and_work_notes) and
        ("patch" in event.short_description or event.short_description == "test patch deployment")
      action:
        run_workflow_template:
          name: "SNOW: Implement - Patch Deployment"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              incident_sys_id: "{{ event.sys_id }}"
              incident_number: "{{ event.number }}"
              incident_state: "{{ event.state }}"
              short_description: "{{ event.short_description | default('') }}"
              description: "{{ event.description | default('') }}"
              start_date: "{{ event.start_date | default('') }}"
              planned_end_date: "{{ event.planned_end_date | default(event.end_date | default('')) }}"
              assignment_group: "{{ event.assignment_group | default('') }}"
              assigned_to: "{{ event.assigned_to | default('') }}"
              priority: "{{ event.priority | default('') }}"
              urgency: "{{ event.urgency | default('') }}"
              impact: "{{ event.impact | default('') }}"
              change_type: "{{ event.type | default('') }}"
              risk_level: "{{ event.risk | default('') }}"

    - name: Dispatch default handler for change requests in implementation
      condition: event.sys_class_name == "change_request" and (event.state in ["implementation", "Implementation", "implement", "-1", -1]) and
        ("EDA-IMPLEMENT-PROCESSED" not in event.comments_and_work_notes)
      action:
        run_workflow_template:
          name: "SNOW: Implement - CR"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description | default('') }}"
              description: "{{ event.description | default('') }}"
              start_date: "{{ event.start_date | default('') }}"
              planned_end_date: "{{ event.planned_end_date | default(event.end_date | default('')) }}"
              assignment_group: "{{ event.assignment_group | default('') }}"
              assigned_to: "{{ event.assigned_to | default('') }}"
              priority: "{{ event.priority | default('') }}"
              urgency: "{{ event.urgency | default('') }}"
              impact: "{{ event.impact | default('') }}"
              change_type: "{{ event.type | default('') }}"
              risk_level: "{{ event.risk | default('') }}"
