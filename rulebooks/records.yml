---
- name: Generic new poll for new records in ServiceNow and process the incidents. 
  hosts: all
  sources:
    - name: Watch for any updated incidents
      servicenow.itsm.records:
        table: incident
        interval: 5
    - name: Monitor ServiceNow change requests in implementation
      servicenow.itsm.records:
        table: change_request
        interval: 10

  rules:
    - name: Enrich new incident received. 
      condition: event.sys_class_name == "incident" and event.sys_mod_count == "0"
      action:
        run_job_template:
          name: "EDA Enrich ServiceNow REQ"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              req_sys_id: "{{ event.sys_id }}"
              req_number: "{{ event.number }}"

    - name: Create a change request if needed.
      condition: event.sys_class_name == "incident" and event.sys_mod_count >= "0" and (event.category == "Software" or event.category == "software") and event.short_description == "test patch deployment"
      action:
        run_job_template:
          name: "SNOW: Create Software Change Request"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              req_sys_id: "{{ event.sys_id }}"
              req_number: "{{ event.number }}"

    - name: Dispatch patch-related change requests in implementation
      condition: event.sys_class_name == "change_request" and event.state == "implementation" and ("patch" in event.short_description or "Patch" in event.short_description or "PATCH" in event.short_description or event.short_description == "test patch deployment")
      action:
        run_job_template:
          name: "SNOW: Implement - Patch Deployment"
          organization: SNOW
          post_events: true
          job_args:
            extra_vars:
              change_request_sys_id: "{{ event.sys_id }}"
              change_request_number: "{{ event.number }}"
              change_request_state: "{{ event.state }}"
              short_description: "{{ event.short_description }}"
              description: "{{ event.description }}"
              start_date: "{{ event.start_date }}"
              planned_end_date: "{{ event.planned_end_date }}"
              assignment_group: "{{ event.assignment_group }}"
              assigned_to: "{{ event.assigned_to }}"
              priority: "{{ event.priority }}"
              urgency: "{{ event.urgency }}"
              impact: "{{ event.impact }}"
              change_type: "{{ event.type }}"
              risk_level: "{{ event.risk }}"